/*  Copyright (c) Tiger's Eye Jade Swiftwing, all rights reserved.
    This file is written by Tiger's Eye Jade Swiftwing.  It is licensed under the
GPLv3 license.  Note that my first name is "Tiger's Eye" (which is two words), my
middle name is "Jade", and "Swiftwing" is one word that is my last name.
    Tritonhawk-Plus is a creation of Tiger's Eye Jade Swiftwing, also known as
Tiger J. Swiftwing, Tiger Swiftwing, and a few other versions of my name...
    This program is free software: you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or (at your option) any later
version.  This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
details.  You should have received a copy of the GNU General Public License along
with this program. If not, see <https://www.gnu.org/licenses/>.
    This file is part of the open-source Tritonhawk-Plus project(s), located at:
https://github.com/TigersEyeJadeSwiftwing/Tritonhawk-Plus
    This software is one or more plug-ins for the open-source graphics and image
software editing and creation programs known as GIMP.  GIMP can be found at:
https://www.gimp.org/
    If you want to borrow any of the source code from the custom math library .inl files
that are part of this project, the ones with this copyright notice and such are also
licensed under the GPL version 3 license. */

This file may come in handy if you want to build the plug-in without Codeblocks IDE.
It lists all of the stuff that Codeblocks sends to the Clang++ command line.
Without Codeblocks, this file will help when it comes to what to pass to Clang++, or
another compiler toolchain, for building the Tritonhawk-Plus project(s).

// Dependencies for building from source code include all of the stuff you need for building GIMP, version 3.x, plus
//   you will also need OpenMP and anything else your compiler needs to make OpenMP programs build and work properly.

// preprocessor defines
-DINI_SHARED_LIB
-DLIBDEFLATE_DLL
-DPLUG_IN_BINARY="(gchar*)(\"tritonhawk-plus-image-resize\")"
-DPLUG_IN_SOURCE="(gchar*)(\"tritonhawk-plus-image-resize.cpp\")"
-DPLUG_IN_PROC="(gchar*)(\"tritonhawk-plus-image-resize\")"
-DPLUG_IN_ROLE="(gchar*)(\"tritonhawk-plus-image-resize\")"
-DPLUG_IN_MENU_LABEL="(gchar*)(\"Tritonhawk Plus Multi-Threaded Resize\")"
-DPLUG_IN_MENU_PATH="(gchar*)(\"<Image>/Image/Tritonhawk Plus/\")"
-DPLUG_IN_DOCUMENTATION_BLURB="(gchar*)(\"Tritonhawk Plus Multi-Threaded Image Resize\")"
-DPLUG_IN_DOCUMENTATION_HELP_CAPTION="(gchar*)(\"Tritonhawk Plus Multi-Threaded Image Resize\")"
-DPLUG_IN_AUTHOR="(gchar*)(\"Tiger J. Swiftwing\")"
-DPLUG_IN_COPYRIGHT="(gchar*)(\"(c) 2025 Tiger J. Swiftwing\")"
-DPLUG_IN_DATE="(gchar*)(\"July 2025 CE\")"
-DPLUG_IN_GUI_DIALOG_CAPTION="(gchar*)(\"Tritonhawk Plus Multi-Threaded Image Resize\")"
-DPLUG_IN_VERSION_AND_DATE_INFO="(gchar*)(\"Non-numbered version, compiled from Github source, first version July 2025 CE\")"
-DPLUG_IN_GITHUB_REPO_URL="(gchar*)(\"https://github.com/TigersEyeJadeSwiftwing/Tritonhawk-Plus\")"

// You can, if you want, define either one or the other of the following two, if you want to specify how the 128-bit floating-point
//   data types are defined and used.  This affects whether or not the code will use existing, built-in functions for quad
//   precision floats by using "f128" as an alias for "long double" and pre-existing functions like "powl()" for processing,
//   or if the program should use custom-coded math routines from included source code files that offer their own integrated
//   quad math library along with __float128 for the "f128" data type, and functions like "powq()" from included ".inl" inline
//   C++ source code.
// You can decline to use either of the two #defines, and one will be picked for you, or you can define THP_FORCE_USE_LONG_DOUBLE_128
//   to insist on using "long double" for the data type "f128" (which uses existing long double math functions), and also expects
//   long doubles to be 128-bits, or you can #define THP_FORCE_USE_FLOAT128 to force the compiler to try to use "__float128" for "f128"
//   128-bit floating-point variables, which would make use of the included math functions found in inline ".inl" source code files.
-DTHP_FORCE_USE_LONG_DOUBLE_128
or
-DTHP_FORCE_USE_FLOAT128

// flags passed to clang++ at the command line
-std=gnu23
-std=gnu++23
-march=x86-64-v3
-mtune=generic
-ftree-vectorize
-funroll-loops
-m64
-O3
-mlong-double-80
-fopenmp=libomp
-Wall
-flto
-fno-math-errno
-fno-trapping-math
-ffp-contract=off

// flags passed to the linker at the command line
-std=gnu23
-std=gnu++23
-march=x86-64-v2
-mtune=generic
-ftree-vectorize
-funroll-loops
-m64
-O3
-mlong-double-80
-fopenmp=libomp
-Wall
-flto
-fno-math-errno
-fno-trapping-math
-ffp-contract=off
-static-libgcc
-static-libstdc++

// folders passed to the compiler for included library headers and other source code
-IC:/msys64/clang64/include/gimp-3.0
-IC:/msys64/clang64/include/gtk-3.0
-IC:/msys64/clang64/include/pango-1.0
-IC:/msys64/clang64/include/harfbuzz
-IC:/msys64/clang64/include/cairo
-IC:/msys64/clang64/include/atk-1.0
-IC:/msys64/clang64/include/fribidi
-IC:/msys64/clang64/include/gegl-0.4
-IC:/msys64/clang64/include/json-glib-1.0
-IC:/msys64/clang64/include/babl-0.1
-IC:/msys64/clang64/include/freetype2
-IC:/msys64/clang64/include/pixman-1
-IC:/msys64/clang64/include/gdk-pixbuf-2.0
-IC:/msys64/clang64/include/libpng16
-IC:/msys64/clang64/include/webp
-IC:/msys64/clang64/include/gio-win32-2.0
-IC:/msys64/clang64/include/glib-2.0
-IC:/msys64/clang64/lib/glib-2.0/include

// libraries to link to, flags passed to the linker at the command line
-lgimpui-3.0
-lgimpwidgets-3.0
-lgimpmodule-3.0
-lgimp-3.0
-lgimpbase-3.0
-lgimpcolor-3.0
-lgimpconfig-3.0
-lgimpmath-3.0
-lgtk-3
-lgdk-3
-lz
-lgdi32
-limm32
-lshell32
-lole32
-luuid
-lwinmm
-ldwmapi
-lsetupapi
-lcfgmgr32
-lhid
-lwinspool
-lcomctl32
-lcomdlg32
-lpangocairo-1.0
-lpangowin32-1.0
-lpango-1.0
-lcairo-gobject
-latk-1.0
-lgegl-0.4
-lgegl-npd-0.4
-ljson-glib-1.0
-lbabl-0.1
-lgexiv2
-lcairo
-lharfbuzz
-lgdk_pixbuf-2.0
-lgio-2.0
-lgobject-2.0
-lgmodule-2.0
-lglib-2.0
-lintl
